Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
   SELECT count(*) FROM table 
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000 
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total number of distinct records for the primary keys in each of the tables listed below:
   SELECT count(DISTINCT key) FROM table
                     
i. Business =   id - 10000
ii. Hours =     business_id - 1562 
iii. Category = business_id - 2643 
iv. Attribute = business_id - 1115 
v. Review =     id - 10000 ,user_id - 9581 ,business_id - 8090 
vi. Checkin =   business_id - 493 
vii. Photo =    id 10000 ,business_id - 6493 
viii. Tip =     user_id - 537 ,business_id - 3979 
ix. User =      id - 10000 
x. Friend =     user_id - 11 
xi. Elite_years = user_id - 2780 

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	
        SELECT count(*)
		FROM user
		WHERE id IS NULL OR 
		  name IS NULL OR 
		  review_count IS NULL OR 
		  yelping_since IS NULL OR
		  useful IS NULL OR 
		  funny IS NULL OR 
		  cool IS NULL OR 
		  fans IS NULL OR 
		  average_stars IS NULL OR 
		  compliment_hot IS NULL OR 
		  compliment_more IS NULL OR 
		  compliment_profile IS NULL OR 
		  compliment_cute IS NULL OR 
		  compliment_list IS NULL OR 
		  compliment_note IS NULL OR 
		  compliment_plain IS NULL OR 
		  compliment_cool IS NULL OR 
		  compliment_funny IS NULL OR 
		  compliment_writer IS NULL OR 
		  compliment_photos IS NULL 
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	        SELECT min(stars),max(stars),avg(stars)                
		FROM review

		min:	1	max:	5	avg:  3.7082  
		
	
	ii. Table: Business, Column: Stars
                SELECT min(stars),max(stars),avg(stars)                
		FROM business
	
		min:	1.0	max:	5.0	avg:  3.6549 
		
	
	iii. Table: Tip, Column: Likes
	        SELECT min(likes),max(likes),avg(likes)                
		FROM tip

		min:	0	max:	2	avg:  0.0144
		
	
	iv. Table: Checkin, Column: Count
                SELECT min(count),max(count),avg(count)                
		FROM checkin
	
		min:	1	max:	53	avg:   1.9414
		
	
	v. Table: User, Column: Review_count
                SELECT min(review_count),max(review_count),avg(review_count)
                FROM user
	
		min:	0	max:	2000	avg:   24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
        SELECT city,sum(review_count) 
        FROM business 
	GROUP BY city
        ORDER BY sum(review_count) desc
	
	
	Copy and Paste the Result Below:
        
+-----------------+-------------------+
| city            | sum(review_count) |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montréal        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars,count(id) FROM business 
WHERE city = 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+-----------+
| stars | count(id) |
+-------+-----------+
|   1.5 |         1 |
|   2.5 |         2 |
|   3.5 |         3 |
|   4.0 |         2 |
|   4.5 |         1 |
|   5.0 |         1 |
+-------+-----------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT stars,count(id) FROM business 
WHERE city = 'Beachwood'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+-----------+
| stars | count(id) |
+-------+-----------+
|   2.0 |         1 |
|   2.5 |         1 |
|   3.0 |         2 |
|   3.5 |         2 |
|   4.0 |         1 |
|   4.5 |         2 |
|   5.0 |         5 |
+-------+-----------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
        
        SELECT name,review_count 
        FROM user         
	ORDER BY review_count desc
        LIMIT 3
	
		
	Copy and Paste the Result Below:
	
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
        
        No. In some cases review count increases the number of fans and it also depends on the date from which they are yelping.
        But also in case of Sara we can see more reviews but less fans. So, It is not always increasing.
	
        SELECT name,review_count,yelping_since,fans 
        FROM user         
	ORDER BY review_count desc

+-----------+--------------+---------------------+------+
| name      | review_count | yelping_since       | fans |
+-----------+--------------+---------------------+------+
| Gerald    |         2000 | 2012-12-16 00:00:00 |  253 |
| Sara      |         1629 | 2010-05-16 00:00:00 |   50 |
| Yuri      |         1339 | 2008-01-03 00:00:00 |   76 |
| .Hon      |         1246 | 2006-07-19 00:00:00 |  101 |
| William   |         1215 | 2015-02-19 00:00:00 |  126 |
| Harald    |         1153 | 2012-11-27 00:00:00 |  311 |
| eric      |         1116 | 2007-05-27 00:00:00 |   16 |
| Roanna    |         1039 | 2006-03-28 00:00:00 |  104 |
| Mimi      |          968 | 2011-03-30 00:00:00 |  497 |
| Christine |          930 | 2009-07-08 00:00:00 |  173 |
| Ed        |          904 | 2009-08-10 00:00:00 |   38 |
| Nicole    |          864 | 2006-08-02 00:00:00 |   43 |
| Fran      |          862 | 2012-04-05 00:00:00 |  124 |
| Mark      |          861 | 2009-05-31 00:00:00 |  115 |
| Christina |          842 | 2012-10-08 00:00:00 |   85 |
| Dominic   |          836 | 2011-02-06 00:00:00 |   37 |
| Lissa     |          834 | 2007-08-14 00:00:00 |  120 |
| Lisa      |          813 | 2009-10-05 00:00:00 |  159 |
| Alison    |          775 | 2007-07-02 00:00:00 |   61 |
| Sui       |          754 | 2009-09-07 00:00:00 |   78 |
| Tim       |          702 | 2009-01-21 00:00:00 |   35 |
| L         |          696 | 2010-04-29 00:00:00 |   10 |
| Angela    |          694 | 2010-10-01 00:00:00 |  101 |
| Crissy    |          676 | 2008-07-31 00:00:00 |   25 |
| Lyn       |          675 | 2009-11-07 00:00:00 |   45 |
+-----------+--------------+---------------------+------+
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
        Love count is more then hate count.
        Love - 
        
        
        +----------+
        | count(*) |
        +----------+
        |     1780 |
        +----------+
 
        Hate -
        
        
        +----------+
        | count(*) |
        +----------+
        |      232 |
        +----------+
	
	SQL code used to arrive at answer:
        
        SELECT count(*)
	FROM review        
	where text like '%love%';
	
        SELECT count(*)
	FROM review
	where text like '%hate%'    
        

	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT id,name,fans        
	FROM user        
	ORDER BY fans desc
        LIMIT 10

	Copy and Paste the Result Below:
       
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+

	
Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

Yes, the two groups have different distribution of hours. 4-5 star groups have less hours than the 2-3 star groups.

ii. Do the two groups you chose to analyze have a different number of reviews?

Yes, 4-5 stars have more number of reviews then 2-3 hours in many cases.         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

No, all the businesses have different postal codes.

SQL code used for analysis:

                SELECT B.name,
			   B.review_count,
			   H.hours,
			   postal_code,
			   CASE
				  WHEN hours LIKE "%monday%" THEN 1
				  WHEN hours LIKE "%tuesday%" THEN 2
				  WHEN hours LIKE "%wednesday%" THEN 3
				  WHEN hours LIKE "%thursday%" THEN 4
				  WHEN hours LIKE "%friday%" THEN 5
				  WHEN hours LIKE "%saturday%" THEN 6
				  WHEN hours LIKE "%sunday%" THEN 7
			   END AS ord,
			   CASE
				  WHEN B.stars BETWEEN 2 AND 3 THEN '2-3 stars'
				  WHEN B.stars BETWEEN 4 AND 5 THEN '4-5 stars'
			   END AS star_rating
		FROM business B INNER JOIN hours H
		ON B.id = H.business_id
		INNER JOIN category C
		ON C.business_id = B.id
		WHERE (B.city == 'Las Vegas'
		AND
		C.category LIKE 'Restaurants')
		AND
		(B.stars BETWEEN 2 AND 3
		OR
		B.stars BETWEEN 4 AND 5)
		GROUP BY stars,ord
		ORDER BY ord,star_rating ASC

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
   The number of open businesses are way more than closed ones.
         
         
ii. Difference 2:
    Average stars for open buisnesses is greater then that of the closed businesses.
         
         
SQL code used for analysis:

SELECT is_open,count(*),sum(review_count),avg(stars)
FROM business
GROUP BY is_open

+---------+----------+-------------------+---------------+
| is_open | count(*) | sum(review_count) |    avg(stars) |
+---------+----------+-------------------+---------------+
|       0 |     1520 |             35261 | 3.52039473684 |
|       1 |     8480 |            269300 | 3.67900943396 |
+---------+----------+-------------------+---------------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

Analysis of all the open categories present in a city along with the average rating for these establishments. In a nut shell, a guide to people visiting a city and what is popular there.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
Here we see what are the major categories of establishments present in a city. People may look at this data before or during their visit. This will help them figure out which city is popular for which kind of category based on average star ratings and also how many such open establishments are there.
This analysis required data from the business, review and category tables, in order to establish a clear link between them.
iii. Output of your finished dataset:

+-----------+-------+------------------------+------------------+----------------+
| city      | state | category               | no_of_open_types | average_rating |
+-----------+-------+------------------------+------------------+----------------+
| Phoenix   | AZ    | Restaurants            |                5 |            4.6 |
| Phoenix   | AZ    | American (Traditional) |                3 |  4.66666666667 |
| Phoenix   | AZ    | Barbeque               |                3 |  4.66666666667 |
| Phoenix   | AZ    | Bars                   |                3 |  4.66666666667 |
| Phoenix   | AZ    | Food                   |                3 |  4.66666666667 |
| Phoenix   | AZ    | Nightlife              |                3 |  4.66666666667 |
| Phoenix   | AZ    | Smokehouse             |                3 |  4.66666666667 |
| Las Vegas | NV    | Asian Fusion           |                2 |            4.5 |
| Phoenix   | AZ    | Breakfast & Brunch     |                2 |            4.5 |
| Las Vegas | NV    | Chinese                |                2 |            4.5 |
| Cleveland | OH    | Ethnic Food            |                2 |            4.5 |
| Cleveland | OH    | Farmers Market         |                2 |            4.5 |
| Cleveland | OH    | Food                   |                2 |            4.5 |
| Cleveland | OH    | Fruits & Veggies       |                2 |            4.5 |
| Las Vegas | NV    | Malaysian              |                2 |            4.5 |
| Cleveland | OH    | Market Stalls          |                2 |            4.5 |
| Cleveland | OH    | Meat Shops             |                2 |            4.5 |
| Las Vegas | NV    | Noodles                |                2 |            4.5 |
| Cleveland | OH    | Public Markets         |                2 |            4.5 |
| Las Vegas | NV    | Restaurants            |                2 |            4.5 |
| Cleveland | OH    | Seafood Markets        |                2 |            4.5 |
| Cleveland | OH    | Shopping               |                2 |            4.5 |
| Las Vegas | NV    | Soup                   |                2 |            4.5 |
| Cleveland | OH    | Specialty Food         |                2 |            4.5 |
| Las Vegas | NV    | Taiwanese              |                2 |            4.5 |
+-----------+-------+------------------------+------------------+----------------+
(Output limit exceeded, 25 of 37 total rows shown)

iv. Provide the SQL code you used to create your final dataset:

select city,state,category, count(category) as no_of_open_types, avg(c.stars) as average_rating from (business a inner join category b on (a.id = b.business_id)) inner join review c on (c.business_id = a.id) where is_open = 1
group by category,city
order by no_of_open_types desc
